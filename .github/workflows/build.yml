name: Build

on:
  workflow_call:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { platform: linux, arch: x86_64, os: ubuntu-latest, executable-name: "monoteny" }
#          - { platform: linux, arch: x86_32, os: ubuntu-22.04 }
#          - { platform: linux, arch: arm64, os: ubuntu-22.04-arm }
#          - { platform: linux, arch: arm32, os: ubuntu-22.04-arm }
          - { platform: windows, arch: x86_64, os: windows-latest, executable-name: "monoteny" }
#          - { platform: windows, arch: x86_32, os: windows-latest }
#          - { platform: windows, arch: arm64, os: windows-latest }
          - { platform: macos, arch: universal, os: macos-latest, executable-name: "monoteny.exe" }

    runs-on: ${{ matrix.target.os }}

    steps:
    - uses: actions/checkout@v4
    - run: rustup toolchain install stable --profile minimal
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "main"
        save-if: ${{ github.ref == 'refs/heads/main' }}
    - name: Build
      run: cargo build --release --verbose
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Monoteny-${{ matrix.target.platform }}-${{ matrix.target.arch }}
        path: |
          ${{ github.workspace }}/target/release/${{ matrix.target.executable-name }}
