name: Build

on:
  workflow_call:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { name: "linux-x86", target: "i686-unknown-linux-gnu", executable-name: "monoteny", os: ubuntu-latest }
          - { name: "linux-x86_64", target: "x86_64-unknown-linux-gnu", executable-name: "monoteny", os: ubuntu-latest, }
          - { name: "linux-aarch64", target: "aarch64-unknown-linux-gnu", executable-name: "monoteny", os: ubuntu-latest, }
          - { name: "windows-x86", target: "i686-pc-windows-msvc", os: windows-latest, executable-name: "monoteny.exe" }
          - { name: "windows-x86_64", target: "x86_64-pc-windows-msvc", os: windows-latest, executable-name: "monoteny.exe" }
          - { name: "macos-x86", target: "x86_64-apple-darwin", executable-name: "monoteny", os: macos-latest }
          - { name: "macos-aarch64", target: "aarch64-apple-darwin", executable-name: "monoteny", os: macos-latest }

    runs-on: ${{ matrix.target.os }}

    steps:
    - uses: actions/checkout@v4
    - run: rustup toolchain install stable --profile minimal
    - uses: Swatinem/rust-cache@v2
      with:
        prefix-key: "main"
        save-if: ${{ github.ref == 'refs/heads/main' }}
    - name: Build
      run: cargo build --release --verbose --target ${{ matrix.target.target }}
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: Monoteny-${{ matrix.target.name }}
        path: |
          ${{ github.workspace }}/target/release/${{ matrix.target.executable-name }}
