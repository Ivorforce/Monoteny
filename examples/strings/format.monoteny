def format(value '$Float32, rounded: Bool) -> String :: match rounded [
    true: round(value).to_string(),
    false: value.to_string(),
];

@main
def main() :: {
    let height 'Float32 = 5.233;
    -- Calls (height as $ToString).to_string(),
    --  a shortcut through format(height '$ToString) which does the same.
    -- The string is concatenated with a string builder.
    print("Height is \(height)");

    -- Calls format(height, precision: 2)
    print("Height is \(height, precision: 1)");

    -- Calls the above declared format function.
    print("Height is \(height, rounded: true)");
};

@transpile
def transpile(transpiler 'Transpiler) :: {
    transpiler.add(main);
};
