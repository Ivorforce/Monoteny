// alias: floor_div
pattern {} /. {} :: MultiplicationPrecedence;

given <Num> if Number<Num> {
    fun {lhs: Num} /. {rhs: Num} -> Num :: lhs / rhs;
}

given <Num> if Number<Num> {
    fun square(_ a: Num) -> Num :: a * a;
    fun {self: Num}.square() -> Num :: self * self;
}

fun no_op() :: {}

fun main() :: {
    var b = 5;
    b = 3;

    no_op();

    print("b: ");
    print(5 > 2 ** 3 /. 2);
    print(5 > 2 || true);
    print(2 ** 3 ** 5 + 2);
    print([b, square(b), 2.square()]);
}
