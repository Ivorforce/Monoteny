trait Animal {
    def {Self}.talk();
};

@struct
trait Cat {};

declare Cat is Animal {
    def {Self}.talk() :: {
        print("Meow");
    };
};

@struct
trait Dog {};

declare Dog is Animal {
    def {Self}.talk() :: {
        print("Bark");
    };
};

def converse(lhs '$Animal#lhs, rhs '$Animal#rhs) :: {
    lhs.talk();
    rhs.talk();
};

@main
def main() :: {
    let cat = Cat();
    let dog = Dog();
    converse(cat, dog);
    converse(dog, cat);
};

@transpile
def transpile(transpiler 'Transpiler) :: {
    transpiler.add(main);
};
